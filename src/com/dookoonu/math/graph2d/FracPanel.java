/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dookoonu.math.graph2d;

import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class FracPanel extends javax.swing.JPanel {
    
    private BufferedImage bimg;
    private Point centerPoint;
    private InternalGraphPaper igp;

    /**
     * Creates new form FracPanel
     */
    public FracPanel() {
        initComponents();
        //setSize(200,200);        
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (bimg != null) {
            g.drawImage(bimg, 0, 0, this);
        }
    }

    public void setImage(BufferedImage img) {
        bimg = img;
    }

    public void setPaper(InternalGraphPaper p) {
        igp = p;
    }
    
    public void saveImage(File file){
        if(bimg!=null){
            try {
                ImageIO.write(bimg, "jpeg", file);
            } catch (IOException ex) {
                Logger.getLogger(FracPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{            
            JOptionPane.showMessageDialog(this, "Please Generate an image", "No Image", JOptionPane.ERROR_MESSAGE);
        }
    }

    public Point getCenterPoint(){
        return centerPoint;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if(igp==null) {
            return;
        }
        if (evt.getButton() == MouseEvent.BUTTON1) {
            centerPoint = evt.getPoint();
            igp.updateRanges(centerPoint);
        } else if (evt.getButton() == MouseEvent.BUTTON3) {
            igp.restoreRange();
        }
        //System.out.println("Point Clicked" + centerPoint);
    }//GEN-LAST:event_formMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
